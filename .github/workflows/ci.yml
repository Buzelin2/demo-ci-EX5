# .github/workflows/ci.yml
name: Java CI

# Dispara em push (qualquer branch) e em pull requests
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Faz checkout do repositório
      - name: Check out repository
        uses: actions/checkout@v3

      # 2) Baixa/cacheia as dependências do Maven (opcional, mas acelera)
      - name: Set up Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 3) Configura o JDK (versão 1.8 compatível com o pom.xml)
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      # 4) Apenas confirma versão do Java e Maven (debug)
      - name: Verify Java Version
        run: java -version

      - name: Verify Maven Version
        run: mvn -v

      # 5) Compila e empacota usando Maven (gera .jar em target/)
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 6) Executa os testes unitários (em src/test/java)
      - name: Run tests with Maven
        run: mvn test --file pom.xml

      # 7) (Opcional) Gera relatório de cobertura, se tiver plugin configurado
      # - name: Generate Code Coverage Report
      #   run: mvn jacoco:report

      # 8) Upload de artefatos (por exemplo, JAR) – opcional
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: example-jar
      #     path: target/*.jar
